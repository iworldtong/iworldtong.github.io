<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iworld's Blog</title>
    <description>世界再大，还是遇见了你</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 10 Nov 2018 16:23:32 +0800</pubDate>
    <lastBuildDate>Sat, 10 Nov 2018 16:23:32 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>从矩阵微分的角度推导BP算法（附代码）</title>
        <description>&lt;h2 id=&quot;1-矩阵的微分&quot;&gt;1. 矩阵的微分&lt;/h2&gt;

&lt;h3 id=&quot;11-函数矩阵的微分形式&quot;&gt;1.1 函数矩阵的微分形式&lt;/h3&gt;

&lt;p&gt;为简单起见，记 $\mathbf {e}_i$ 为第 $i$ 个分量为1，其余分量为0的单位列向量。&lt;/p&gt;

&lt;p&gt;对于 $\mathbf{X} \in \mathbb{R}^{m\times n}$，有 $m\times n$ 元函数 $f(\mathbf{X})$，定义 $f(\mathbf{X})$ 对 $\mathbf{X}$ 的导数为&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{eqnarray*}
\frac{df}{d\mathbf{X}} &amp;=&amp; \left( \frac{\partial f}{\partial \xi_{ij}} \right)_{m\times n} = \begin{bmatrix} \frac{\partial f}{\partial \xi_{11}} &amp; \cdots &amp; \frac{\partial f}{\partial \xi_{1n}} \\ \vdots &amp;&amp;\vdots \\ \frac{\partial f}{\partial \xi_{m1}}&amp;\cdots&amp;\frac{\partial f}{\partial \xi_{mn}} \end{bmatrix}\\
&amp;=&amp; \sum_{i=1}^m \sum_{j=1}^n \frac{\partial f}{\partial \xi_{ij}}\mathbf{e}_i\mathbf{e}_j^T
\end{eqnarray*} %]]&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;上式中 $\mathbf{e}_i$为 $m$ 维列向量，$\mathbf{e}_j$为 $n$ 维列向量。&lt;/p&gt;

&lt;h3 id=&quot;12-矩阵函数的微分形式&quot;&gt;1.2 矩阵函数的微分形式&lt;/h3&gt;

&lt;p&gt;结合1.1，定义矩阵 $\frac{d\mathbf{F}}{d \mathbf{X}} = \begin{bmatrix} \frac{\partial \mathbf{F}}{\partial \xi_{11}} &amp;amp; \cdots &amp;amp; \frac{\partial \mathbf{F}}{\partial \xi_{1n}} \ \vdots &amp;amp;&amp;amp;\vdots \ \frac{\partial \mathbf{F}}{\partial \xi_{m1}}&amp;amp;\cdots&amp;amp;\frac{\partial \mathbf{F}}{\partial \xi_{mn}} \end{bmatrix}$，对 $\mathbf{X}$ 的导数为：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\frac{d\mathbf{F}}{d \mathbf{X}} = \begin{bmatrix} \frac{\partial \mathbf{F}}{\partial \xi_{11}} &amp; \cdots &amp; \frac{\partial \mathbf{F}}{\partial \xi_{1n}} \\ \vdots &amp;&amp;\vdots \\ \frac{\partial \mathbf{F}}{\partial \xi_{m1}}&amp;\cdots&amp;\frac{\partial \mathbf{F}}{\partial \xi_{mn}} \end{bmatrix}_{mr\times ns} \quad \text{其中 } \frac{d\mathbf{F}}{d \xi_{ij}} = \begin{bmatrix} \frac{\partial f_{11}}{\partial \xi_{ij}} &amp; \cdots &amp; \frac{\partial f_{1s}}{\partial \xi_{ij}} \\ \vdots &amp;&amp;\vdots \\ \frac{\partial f_{r1}}{\partial \xi_{ij}}&amp;\cdots&amp;\frac{\partial f_{rs}}{\partial \xi_{ij}} \end{bmatrix}_{r\times s} %]]&gt;&lt;/script&gt;

&lt;h3 id=&quot;13-一些重要性质&quot;&gt;1.3 一些重要性质&lt;/h3&gt;

&lt;p&gt;首先给出向量和矩阵求导的链式法则：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;若 $\mathbf{y}(\mathbf{x})$ 是 $\mathbf{x}$ 的向量值函数，则&lt;/li&gt;
  &lt;/ul&gt;

  &lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{\partial f(\mathbf{y}(\mathbf{x}))}{\partial \mathbf{x}}=\frac{\partial \mathbf{y}^T(\mathbf{x})}{\partial \mathbf{x}} \frac{\partial f(\mathbf{y})}{\partial \mathbf{y}}&lt;/script&gt;

  &lt;p&gt;式中 $\frac{\partial \mathbf{y}^T(\mathbf{x})}{\partial \mathbf{x}}$ 为 $n\times n$ 矩阵。&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;设 $\mathbf{A}$ 为 $m\times n$ 矩阵，且 $y=f(\mathbf{A})$ 和 $g(y)$ 分别是以矩阵 $\mathbf {A}$ 和标量 $y$ 为变元的实值函数，则&lt;/li&gt;
  &lt;/ul&gt;

  &lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{\partial g(f(\mathbf{A}))}{\partial \mathbf{A}}=\frac{dg(y)}{dy}\frac{\partial f(\mathbf{A})}{\partial \mathbf{A}}&lt;/script&gt;

&lt;/blockquote&gt;

&lt;p&gt;总结一下：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{eqnarray*}
f(\mathbf{t})=f(\mathbf{x(\mathbf{t})}) &amp;\rightarrow&amp; df=d\mathbf{x}^Tdf\\
\mathbf{f}(\mathbf{t})=\mathbf{f}(\mathbf{x(\mathbf{t})}) &amp;\rightarrow&amp; d\mathbf{f}=d\mathbf{f}d\mathbf{x}
\end{eqnarray*} %]]&gt;&lt;/script&gt;

&lt;p&gt;下面介绍两个在推导 BP 算法时用到的性质：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;性质1&lt;/strong&gt;    $\mathbf{y}=\mathbf{W}\mathbf{x}$，函数 $f(\mathbf{y})$ 是向量 $\mathbf{y}$ 的函数，其中 $\mathbf{W}\in C^{m\times n}$ 和 $\mathbf{x}\in C^n$ 无关,则有&lt;/p&gt;

  &lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{d\mathbf{y}^T}{d\mathbf{x}}=\mathbf{W}^T,\quad\frac{d(f(\mathbf{y}))}{d\mathbf{W}}=\frac{d(f(\mathbf{y}))}{d\mathbf{y}}\cdot \mathbf{x}^T&lt;/script&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;证明：&lt;/strong&gt;观察到$\frac{d\mathbf{x}^T}{d\mathbf{x}}=\mathbf{I}$，则有&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{eqnarray*}
\frac{d\mathbf{y}^T}{d\mathbf{x}}&amp;=&amp;\frac{d\mathbf{x}^T\mathbf{W}^T}{d\mathbf{x}}=\frac{d\mathbf{x}^T}{d\mathbf{x}}\mathbf{W}^T=\mathbf{W}^T \\
\frac{d(f(\mathbf{y}))}{d\mathbf{W}}&amp;=&amp;\frac{d(f(\mathbf{y}))}{d\mathbf{y}}\frac{d\mathbf{y}}{d\mathbf{W}} \\
&amp;=&amp; \frac{d(f(\mathbf{y}))}{d\mathbf{y}}\cdot \mathbf{x}^T
\end{eqnarray*} %]]&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;性质2&lt;/strong&gt;    设 $f(\mathbf{x})$ 是向量 $\mathbf{x}$ 的函数，而 $\mathbf{x}$ 又是 $\mathbf{u}$ 的函数，则有&lt;/p&gt;

  &lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{df}{d\mathbf{u}}=\frac{d\mathbf{x}^T}{d\mathbf{u}}\cdot\frac{df}{d\mathbf{x}}&lt;/script&gt;

  &lt;p&gt;根据1.2中定义，有 $\frac{d\mathbf{x}^T}{d\mathbf{u}}=\left(\frac{d\mathbf{x}^T}{du_1},\frac{d\mathbf{x}^T}{du_2},\ldots, \frac{d\mathbf{x}^T}{du_n}  \right)^T$，其中 $\frac{d\mathbf{x}^T}{du_i}=\left( \frac{dx_1}{du_i}, \frac{dx_2}{du_i},\ldots, \frac{dx_n}{du_i} \right)$。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;证明：&lt;/strong&gt;由雅可比矩阵的传递性可知&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{\partial \mathbf{f}}{\partial \mathbf{u}}=\frac{\partial \mathbf{f}}{\partial \mathbf{x}}\frac{\partial \mathbf{x}}{\partial \mathbf{u}}&lt;/script&gt;

&lt;p&gt;再根据 $f$ 退化成实数时雅克⽐矩阵和函数导数的关系，有&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{\partial \mathbf{f}}{\partial \mathbf{x}}=\frac{\partial {f}}{\partial \mathbf{x}^T}, \quad\frac{\partial \mathbf{f}}{\partial \mathbf{u}}=\frac{\partial f}{\partial \mathbf{u}^T}&lt;/script&gt;

&lt;p&gt;将上面三式结合，可得到如下链式法则&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{eqnarray*}
\frac{\partial f}{\partial \mathbf{u}^T} &amp;=&amp; \frac{\partial {f}}{\partial \mathbf{x}^T}\frac{\partial \mathbf{x}}{\partial \mathbf{u}}\\
&amp;\downarrow&amp; 等号两边同时转置 \\
\frac{df}{d\mathbf{u}} &amp;=&amp; \frac{d\mathbf{x}^T}{d\mathbf{u}}\cdot\frac{df}{d\mathbf{x}}
\end{eqnarray*} %]]&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;推广：&lt;/strong&gt;类似的，若 $\mathbf{u}$ 是 $\mathbf{v}$ 的向量值函数，则有&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{df}{d\mathbf{v}}=\frac{d\mathbf{u}^T}{d\mathbf{v}}\cdot\frac{d\mathbf{x}^T}{d\mathbf{u}}\cdot\frac{df}{d\mathbf{x}}&lt;/script&gt;

&lt;h2 id=&quot;2-bp算法推导的矩阵形式&quot;&gt;2. BP算法推导的矩阵形式&lt;/h2&gt;

&lt;p&gt;考虑如下三层前馈神经网络的回归问题：&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img width=&quot;200px&quot; src=&quot;https://res.cloudinary.com/dzu6x6nqi/image/upload/v1541658478/iblog/matrix-differential-to-BP/matrix-differential-to-BP-1.png&quot; /&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;输入层：输入 $\mathbf{x}$&lt;/li&gt;
  &lt;li&gt;隐含层：连接权重为 $\mathbf{W}_1$ ，激活函数为 $\varphi (\cdot)$ ，该层输入为 $\mathbf{z}_1=\mathbf{W}_1\mathbf{x}$，输出为 $\mathbf{h}=\varphi(\mathbf{z}_1)$&lt;/li&gt;
  &lt;li&gt;输出层：连接权重为 $\mathbf{W}_2$ ，该层输入为 $\mathbf{z}_2=\mathbf{W}_2\mathbf{h}$，输出为 $\mathbf{o}=\mathbf{z}_2$&lt;/li&gt;
  &lt;li&gt;损失函数： $e=\frac{1}{2}||\mathbf{y}-\mathbf{o}||_2$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们的目标是求解 $\frac{de}{d\mathbf{W}_1},\frac{de}{d\mathbf{W}_2}$。求解过程如下：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{eqnarray*}
\frac{de}{d\mathbf{o}} &amp;=&amp; \mathbf{o}-\mathbf{y} \\
\frac{de}{d\mathbf{W}_2} &amp;=&amp; \frac{de}{d\mathbf{z_2}} \mathbf{h}^T \\
&amp;=&amp; \frac{d\mathbf{o}^T}{d\mathbf{z}_2} \frac{de}{d\mathbf{o}} \mathbf{h}^T \\
&amp;=&amp;  (\mathbf{o}-\mathbf{y})\mathbf{h}^T \\
\frac{de}{d\mathbf{W}_1} &amp;=&amp; \frac{de}{d\mathbf{z_1}} \mathbf{x}^T \\
&amp;=&amp; \frac{d\mathbf{h}^T}{d\mathbf{z}_1} \frac{d\mathbf{z}_2^T}{d\mathbf{h}} \frac{de}{d\mathbf{z}_2} \mathbf{x}^T \\
&amp;=&amp; \text{diag}(\varphi'(z_{1_i})) \mathbf{W_2}^T \frac{de}{d\mathbf{z}_2} \mathbf{x}^T \\
&amp;=&amp; \text{diag}(\varphi'(z_{1_i})) \mathbf{W_2}^T (\mathbf{o}-\mathbf{y}) \mathbf{x}^T
\end{eqnarray*} %]]&gt;&lt;/script&gt;

&lt;p&gt;通过上面推导，我们可以得到逐层误差之间的关系。定义 $\delta_3=\mathbf{o}-\mathbf{y},\delta_2=\frac{de}{d\mathbf{z}_2},\delta_1=\frac{de}{d\mathbf{z}_1}$，则：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{eqnarray*}
\delta_2 &amp;=&amp; \delta_3 \\
\delta_1 &amp;=&amp; \text{diag}(\varphi'(z_{1_i}))\mathbf{W}_2^T\delta_2
\end{eqnarray*} %]]&gt;&lt;/script&gt;

&lt;p&gt;得到梯度后，可以利用随机梯度下降（Stochastic gradient descent）更新模型：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;init $W_1, W_2$&lt;/li&gt;
  &lt;li&gt;for j=1 to $T$ &lt;br /&gt;
​    　for each sample $( \textbf{x}_i, y_i)$&lt;br /&gt;
​    　　calc   　$\frac{de}{d\mathbf{W}_1},\frac{de}{d\mathbf{W}_2}$&lt;br /&gt;
​    　　update　$\mathbf{W}_1 \leftarrow \mathbf{W}_1 - \gamma\frac{de}{d\mathbf{W}_1},\mathbf{W}_2 \leftarrow \mathbf{W}_2 - \gamma\frac{de}{d\mathbf{W}_2}$&lt;br /&gt;
​    　stop until convergence&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-numpy实现&quot;&gt;3. Numpy实现&lt;/h2&gt;

&lt;p&gt;基于 MNIST 实现手写数字识别。&lt;/p&gt;

&lt;p&gt;设置三层全连接网络，输入层神经元数量为784，隐含层神经元数量为500，输出层神经元数量为10。&lt;/p&gt;

&lt;p&gt;注意隐含层激活函数为 ReLU，输出层激活函数为 Softmax ，重点关注下计算梯度的代码：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;backward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;probs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;probs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;probs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;e1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;e1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dw2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[:,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newaxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dw1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[:,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newaxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以看到&lt;code class=&quot;highlighter-rouge&quot;&gt;e2&lt;/code&gt;对应 $\delta_2$，&lt;code class=&quot;highlighter-rouge&quot;&gt;e1&lt;/code&gt;对应 $\delta_1$ 。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/iworldtong/DeepLearning_note/blob/master/mnist_mlp_np_blog.py&quot;&gt;完整代码&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-参考资料&quot;&gt;4. 参考资料&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;《矩阵分析与应用》张贤达&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/25063314&quot;&gt;机器学习中的矩阵/向量求导&lt;/a&gt; —— 对矩阵求导的介绍很完整&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 09 Nov 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/11/09/matrix-differential-to-BP/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/11/09/matrix-differential-to-BP/</guid>
        
        <category>Deep Learning</category>
        
        
      </item>
    
      <item>
        <title>课程安排问题——从一道Google面试题看动态规划与贪心算法的关系</title>
        <description>&lt;p&gt;对于许多优化问题，使用动态规划算法来求解最优解并非是最高效的，可以使用更简单、高效的&lt;strong&gt;贪心算法&lt;/strong&gt;（greedy algorithm），它在每一步都做出当时看起来最佳的选择，也就是说，它总是做出局部最优解，并希望通过这样的方式找到全局最优解。&lt;/p&gt;

&lt;p&gt;本文将通过实例简单说明一下贪心算法与动态规划之间的关系。课程安排问题是软件所的一位师兄参加 Google 面试遇到的，要求用 Greedy 和 DP 两种方法解答，而之前在国科大算法课上卜老师已经将这两种方法讲解过了，可喜可贺 d(^_^o)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;课程安排问题&lt;/strong&gt;：教务处给某一个教室安排课程，有很多老师都想来这个教室教授他们各自的课。假如第 $i$ 位老师讲的第 $A_i$ 门课程共有 $W_i$ 个学生选课，课程开始时间 $S_i$ ,结束时间为 $F_i$ ，上课时间为 $[S_i,F_i)$ 。那么教务处的老师如何安排课程，使得来这间教室上课的人数最多？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;1-动态规划课程安排问题的最优子结构&quot;&gt;1. 动态规划——课程安排问题的最优子结构&lt;/h2&gt;

&lt;p&gt;举个例子，有如下9门课程：&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img height=&quot;180px&quot; src=&quot;https://res.cloudinary.com/dzu6x6nqi/image/upload/v1541605326/iblog/greedy2dp/greedy2dp-1.png&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;一个比较直观的动态规划算法&quot;&gt;一个比较直观的动态规划算法&lt;/h3&gt;

&lt;p&gt;设最优解的形式为 $X=[x_1,x_2,\ldots,x_9]$，$x_i=1$ 代表课程被安排，否则不安排。&lt;/p&gt;

&lt;p&gt;对于 $n$ 个课程，直接求解并不容易，所以观察原问题是否可以被分解为规模更小的子问题。我们可以把求解过程看成一系列决策过程：在每个决策步上，选择一个课程加入排课表中。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;分析：&lt;/strong&gt;假设我们已经有了最优解，现在考虑最优解的第一个决策，此时最多有 $n$ 种选择，如选择 $A_i$ ，注意同时需要把与 $A_i$ 冲突的所有课程从 $S$ 中移除。以此类推进行下一步决策。这样就将问题分解成了 $n$ 个子问题。&lt;/p&gt;

&lt;p&gt;综合当前决策步的所有情况，可以得到递归表达式，设最多上课人数为 $OPT(S)$，则有：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{eqnarray}
OPT(S)=\max_{A_i\in S} \left\{ OPT(S')+W_i \right\}
\end{eqnarray}&lt;/script&gt;

&lt;p&gt;其中 $S’$ 表示不与 $A_i$ 冲突的所有课程集合（包含 $A_i$ ）。&lt;/p&gt;

&lt;p&gt;该算法的计算复杂度为 $O(2^n)$。&lt;/p&gt;

&lt;h3 id=&quot;改进&quot;&gt;改进&lt;/h3&gt;

&lt;p&gt;上面算法在求解 $S’$ 时有大量的冗余计算，因此计算复杂度比较高。&lt;/p&gt;

&lt;p&gt;添加一步非常重要的操作：为使子问题分解变得更加有序，&lt;strong&gt;首先将课程按结束时间排序&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;分析：&lt;/strong&gt;先DandC，然后DP。假设我们已经得到了最优解，那么最优解中最后一项是哪门课程 ？&lt;/p&gt;

&lt;p&gt;如果安排 $A_9$ ，则时间冲突的 $A_8$ 肯定不能被安排，剩下的只需在 $A_1-A_7$ 中选择，如下图：&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img height=&quot;150px&quot; src=&quot;https://res.cloudinary.com/dzu6x6nqi/image/upload/v1541605326/iblog/greedy2dp/greedy2dp-2.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;也就是说选择 $A_9$ 后，问题变成了 $n=7$ 的课程安排问题，这样可以继续缩小问题规模。现在考察另一种可能：如果不安排 $A_9$ ，则剩下的需在 $A_1-A_8$ 中选择。如下图：&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img height=&quot;150px&quot; src=&quot;https://res.cloudinary.com/dzu6x6nqi/image/upload/v1541605326/iblog/greedy2dp/greedy2dp-3.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;现在就可以写出递归表达式了：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{eqnarray}
OPT(i)=\max \left \{ \begin{aligned} &amp;OPT(pre(i)) + W_i&amp; \quad \text{安排第$i$门课} \\ &amp;OPT(i-1)&amp; \quad \text{不安排第$i$门课} \end{aligned} \right.
\end{eqnarray} %]]&gt;&lt;/script&gt;

&lt;p&gt;其中 $pre(i)$ 为在第 $i$ 门课开始之前结束的课程，有 $F_{pre(i)} \leqslant S_i$ 。&lt;/p&gt;

&lt;p&gt;Python 实现：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;coursesScheduling_DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'''
    Input: courses shape: n x 4 (id,S,F,W)
    Output: Maximum number of students
    '''&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
        
    &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bisect&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;pre_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bisect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bisect_right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pre_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coursesScheduling_DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;最多上课人数：&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;运行结果为最多选课人数为 15 。&lt;/p&gt;

&lt;p&gt;上面算法排序复杂度为 $O(n\log n)$，动态规划复杂度为 $O(n)$，因此总复杂度为 $O(n\log n)$。&lt;/p&gt;

&lt;h2 id=&quot;2-贪心选择&quot;&gt;2. 贪心选择&lt;/h2&gt;

&lt;p&gt;假如我们无需求解所有子问题就可以选择出一个课程加入到最优解中，将会怎样？这将使我们省去递归式（1）中考察所有选择的过程，这就引入了贪心选择。&lt;/p&gt;

&lt;p&gt;首先考虑下面的问题，对其使用 DP 就并不是高效的解法：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;简化后的课程安排问题：&lt;/strong&gt;假设每个课程的选课人数都为1。我们的任务还是和原来一样，选择一些不冲突的课程，让来该教室上课的学生人数最多。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;对于简化后的课程安排问题，直观上，我们应该选择这样一门课，选出它后剩下的资源应该能被尽量多的其他课程所用。现在考虑可选课程，其中必然有一个最先结束。因此，直觉告诉我们应该选择 $S$ 中最早结束的课程，因为它剩下的资源可供它之后尽量多的课程使用。（如果 $S$ 中最早结束的课程有多个，可以选择其中任意一个）换句话说，由于课程已经按结束时间单调递增的顺序排列，贪心选择就是选择 $a_1$ 。（&lt;strong&gt;当然，选择最早结束的课程并不是本问题唯一的贪心选择方法&lt;/strong&gt;）&lt;/p&gt;

&lt;p&gt;下面证明我们的直觉是正确的，即&lt;strong&gt;贪心选择——最早结束的活动——总是最优解的一部分&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;证明：&lt;/strong&gt;设当前所有可选择课程集合为 $S$ ，其最早下课的课程是 $A_1$ ，$X_k$ 为最优解的课程集合，其最早下课的课程是 $A_k$ 。若 $A_1 \neq A_k$ ，则设另一个解 $X’=X-{ A_k } \cup { A_1}$ 。$X’$ 的意义是将 $X$ 中的 $A_k$ 换为 $A_1$ ，同样可知 $X’$ 内无冲突元素，且 $X’$ 与 $X$ 元素个数相等，因此 $X’$ 也是最优解，其最早结束的课程也为 $S$ 中最早结束的课程。&lt;/p&gt;

&lt;p&gt;因此，假如 $A_i$ 下课最早，那么它肯定会出现在最优解。首先我们选最早下课的课程 $A_1$ ，接下来的问题就是在蓝色的方框里面选最优解就行，如此递归。见下图：&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img height=&quot;150px&quot; src=&quot;https://res.cloudinary.com/dzu6x6nqi/image/upload/v1541605326/iblog/greedy2dp/greedy2dp-4.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Python 实现：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;simpleScheduling_Greedy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;previous_f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;previous_f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;previous_f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;同理，对原课程安排问题，根据贪心选择得到的递归表达式为：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{eqnarray}
OPT(i)=\max \left \{ \begin{aligned} &amp;OPT(pre(i)) + W_i&amp; \quad \text{安排第$i$门课} \\ &amp;OPT(i-1)&amp; \quad \text{不安排第$i$门课} \end{aligned} \right.
\end{eqnarray} %]]&gt;&lt;/script&gt;

&lt;p&gt;其中 $pre(i)$ 是表示第 $i$ 门课程开始时已经结束的课程。&lt;/p&gt;

&lt;h2 id=&quot;3-dp-vs-greedy&quot;&gt;3. DP vs Greedy&lt;/h2&gt;

&lt;p&gt;总结 DP 与 Greedy 的异同点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;相似&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;都应用于优化问题&lt;/li&gt;
      &lt;li&gt;都有相应的优化子结构（Optimal substructure）&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;每个 Greedy 背后，几乎都有一个更笨拙的 DP&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;不同&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;DP：在每个决策步上通常会&lt;strong&gt;枚举&lt;/strong&gt;所有可能的选择，并且要求&lt;strong&gt;子问题已经被解决&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Greedy：不需枚举所有可能——不考虑子问题，直接采取&lt;strong&gt;局部最优&lt;/strong&gt;决策 （注意：这里的“局部”意味着我们已经获得了最优解的一部分，并且这部分知识已经足够我们做出一个合适的决策）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 08 Nov 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/11/08/greedy2dp/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/11/08/greedy2dp/</guid>
        
        <category>算法</category>
        
        
      </item>
    
      <item>
        <title>动漫的意义</title>
        <description>&lt;p&gt;有人说: 补番完毕就像失去了一个好朋友。&lt;/p&gt;

&lt;p&gt;是啊，在看番的时候，大家都会倾注自己的感情，把自己代入到二次元，即使只是“旁观者”，但是所有发生在二次元里的事我们都在见证着:不断认识和了解的伙伴、一起面对的事，快乐、高兴、忧愁、疑惑、难过、悲伤、生气、辛酸，都是和二次元里的伙伴们共同拥有的回忆。到了完结之时，那些难忘的人和事都要和我们说再见了，这是真的生离死别，我们也许永远都不会再相见了吧。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dzu6x6nqi/image/upload/v1505300186/%E5%90%91%E5%BE%80_bzyzbl.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;可是呢，大家并没有消失啊。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dzu6x6nqi/image/upload/v1505298769/%E5%BC%80%E5%A7%8B_ij3out.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;他们并没有走，大家结下的羁绊，使我们更紧密地联系在一起——对的，他们已经向我们传达了心意，永远驻留在我们的记忆里，他们并没有走，他们一直都陪伴在我们的身边，鼓励我们，帮助我们，无时无刻。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dzu6x6nqi/image/upload/v1505299018/%E6%9C%8B%E5%8F%8B_zd4oy0.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;他们也许属于过去，但他们早已经成为了我们的力量，鼓励着我们，帮助我们在人生的道路上向前看，向前走，去拥抱未来，拥抱美好的事物。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dzu6x6nqi/image/upload/v1505302431/%E5%90%91%E5%BE%802_uvyz1x.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;到那时，我们也一定会再次遇上像他们一样的伙伴，给予我们再一次难忘的回忆。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dzu6x6nqi/image/upload/v1505301087/%E4%BC%99%E4%BC%B4_hukzgy.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;然后我们又怀着同样的感恩之情，元气满满地，继续向着前走。没有他们，我觉得，我们是不可能做到的。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dzu6x6nqi/image/upload/v1505302860/%E5%90%91%E5%BE%803_s8sxai.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;所以……&lt;/p&gt;

&lt;p&gt;如果以后……&lt;/p&gt;

&lt;p&gt;再相遇的话……&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dzu6x6nqi/image/upload/v1505300757/%E5%86%8D%E7%9B%B8%E9%81%87_nzhwfs.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;初次见面，请多指教！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dzu6x6nqi/image/upload/v1505300757/%E4%BD%A0%E5%A5%BD_r1kn4q.jpg&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 07 Nov 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/11/07/anime-mean/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/11/07/anime-mean/</guid>
        
        <category>二次元</category>
        
        
      </item>
    
  </channel>
</rss>
